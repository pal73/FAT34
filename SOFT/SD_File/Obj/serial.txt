; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o.\Obj\serial.o --depend=.\Obj\serial.d --cpu=Cortex-M3 --apcs=interwork -O3 -IC:\Keil\ARM\INC -IC:\Keil\ARM\INC\NXP\LPC17xx --omf_browse=.\Obj\serial.crf Serial.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  SER_init PROC
;;;21      *----------------------------------------------------------------------------*/
;;;22     void SER_init (int uart) {
000000  4922              LDR      r1,|L1.140|
;;;23       LPC_UART_TypeDef *pUart;
;;;24        
;;;25       if (uart == 0) {                               /* UART0 */
000002  b1a0              CBZ      r0,|L1.46|
;;;26         LPC_PINCON->PINSEL0 |= (1 << 4);             /* Pin P0.2 used as TXD0 (Com0) */
;;;27         LPC_PINCON->PINSEL0 |= (1 << 6);             /* Pin P0.3 used as RXD0 (Com0) */
;;;28     
;;;29         pUart = (LPC_UART_TypeDef *)LPC_UART0;
;;;30       } else {                                       /* UART1 */
;;;31         LPC_PINCON->PINSEL4 |= (2 << 0);             /* Pin P2.0 used as TXD1 (Com1) */
000004  6908              LDR      r0,[r1,#0x10]
000006  f0400002          ORR      r0,r0,#2
00000a  6108              STR      r0,[r1,#0x10]
;;;32         LPC_PINCON->PINSEL4 |= (2 << 2);             /* Pin P2.1 used as RXD1 (Com1) */
00000c  690a              LDR      r2,[r1,#0x10]
;;;33     
;;;34         pUart = (LPC_UART_TypeDef *)LPC_UART1;
00000e  4820              LDR      r0,|L1.144|
000010  f0420208          ORR      r2,r2,#8              ;32
000014  610a              STR      r2,[r1,#0x10]         ;32
                  |L1.22|
;;;35       }
;;;36     
;;;37       pUart->LCR    = 0x83;                          /* 8 bits, no Parity, 1 Stop bit  */
000016  2183              MOVS     r1,#0x83
000018  7301              STRB     r1,[r0,#0xc]
;;;38     //  pUart->DLL    = 6;                             /* 115200 Baud Rate @ 18.0 MHZ PCLK */
;;;39     //  pUart->FDR    = 0x85;                          /* FR = 1,627  DIVADDVAL = 5, MULVAL = 8 */
;;;40       pUart->DLL    = 9;                             /* 115200 Baud Rate @ 25.0 MHZ PCLK */
00001a  2109              MOVS     r1,#9
00001c  7001              STRB     r1,[r0,#0]
;;;41       pUart->FDR    = 0x21;                          /* FR 1,507, DIVADDVAL = 1, MULVAL = 2 */
00001e  2121              MOVS     r1,#0x21
000020  f8801028          STRB     r1,[r0,#0x28]
;;;42       pUart->DLM    = 0;                             /* High divisor latch = 0         */
000024  2100              MOVS     r1,#0
000026  7101              STRB     r1,[r0,#4]
;;;43       pUart->LCR    = 0x03;                          /* DLAB = 0                       */
000028  2103              MOVS     r1,#3
00002a  7301              STRB     r1,[r0,#0xc]
;;;44     }
00002c  4770              BX       lr
                  |L1.46|
00002e  6808              LDR      r0,[r1,#0]            ;26
000030  f0400010          ORR      r0,r0,#0x10           ;26
000034  6008              STR      r0,[r1,#0]            ;26
000036  680a              LDR      r2,[r1,#0]            ;27
000038  4816              LDR      r0,|L1.148|
00003a  f0420240          ORR      r2,r2,#0x40           ;27
00003e  600a              STR      r2,[r1,#0]            ;27
000040  e7e9              B        |L1.22|
;;;45     
                          ENDP

                  SER_putChar PROC
;;;49      *----------------------------------------------------------------------------*/
;;;50     int SER_putChar (int uart, int c) {
000042  4a14              LDR      r2,|L1.148|
;;;51       LPC_UART_TypeDef *pUart;
;;;52     
;;;53       pUart = (uart == 0) ? (LPC_UART_TypeDef *)LPC_UART0 : (LPC_UART_TypeDef *)LPC_UART1;
000044  b100              CBZ      r0,|L1.72|
000046  4a12              LDR      r2,|L1.144|
                  |L1.72|
;;;54       while (!(pUart->LSR & 0x20));
000048  7d10              LDRB     r0,[r2,#0x14]
00004a  0680              LSLS     r0,r0,#26
00004c  d5fc              BPL      |L1.72|
;;;55       return (pUart->THR = c);
00004e  b2c8              UXTB     r0,r1
000050  7010              STRB     r0,[r2,#0]
;;;56     }
000052  4770              BX       lr
;;;57     
                          ENDP

                  SER_getChar PROC
;;;61      *----------------------------------------------------------------------------*/
;;;62     int SER_getChar (int uart) {
000054  490f              LDR      r1,|L1.148|
;;;63       LPC_UART_TypeDef *pUart;
;;;64     
;;;65       pUart = (uart == 0) ? (LPC_UART_TypeDef *)LPC_UART0 : (LPC_UART_TypeDef *)LPC_UART1;
000056  b100              CBZ      r0,|L1.90|
000058  490d              LDR      r1,|L1.144|
                  |L1.90|
;;;66       while (!(pUart->LSR & 0x01));
00005a  7d08              LDRB     r0,[r1,#0x14]
00005c  07c0              LSLS     r0,r0,#31
00005e  d0fc              BEQ      |L1.90|
;;;67       return (pUart->RBR);
000060  7808              LDRB     r0,[r1,#0]
;;;68     }
000062  4770              BX       lr
;;;69     
                          ENDP

                  SER_getChar_nb PROC
;;;73      *----------------------------------------------------------------------------*/
;;;74     int SER_getChar_nb (int uart) {
000064  490b              LDR      r1,|L1.148|
;;;75       LPC_UART_TypeDef *pUart;
;;;76     
;;;77       pUart = (uart == 0) ? (LPC_UART_TypeDef *)LPC_UART0 : (LPC_UART_TypeDef *)LPC_UART1;
000066  b100              CBZ      r0,|L1.106|
000068  4909              LDR      r1,|L1.144|
                  |L1.106|
;;;78       if (pUart->LSR & 0x01)
00006a  7d08              LDRB     r0,[r1,#0x14]
00006c  07c0              LSLS     r0,r0,#31
00006e  d000              BEQ      |L1.114|
;;;79         return (pUart->RBR);
000070  7808              LDRB     r0,[r1,#0]
                  |L1.114|
;;;80       else
;;;81         return 0;
;;;82     }
000072  4770              BX       lr
;;;83     
                          ENDP

                  SER_putString PROC
;;;87      *----------------------------------------------------------------------------*/
;;;88     void SER_putString (int uart, unsigned char *s) {
000074  b510              PUSH     {r4,lr}
000076  4604              MOV      r4,r0
000078  460b              MOV      r3,r1
;;;89     
;;;90       while (*s != 0) {
;;;91        SER_putChar(uart, *s++);
00007a  e003              B        |L1.132|
                  |L1.124|
00007c  1c5b              ADDS     r3,r3,#1
00007e  4620              MOV      r0,r4
000080  f7fffffe          BL       SER_putChar
                  |L1.132|
000084  7819              LDRB     r1,[r3,#0]            ;90
000086  2900              CMP      r1,#0                 ;90
000088  d1f8              BNE      |L1.124|
;;;92       }
;;;93     }
00008a  bd10              POP      {r4,pc}
                          ENDP

                  |L1.140|
                          DCD      0x4002c000
                  |L1.144|
                          DCD      0x40010000
                  |L1.148|
                          DCD      0x4000c000
