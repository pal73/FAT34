; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o.\Obj\spi_lpc17xx.o --depend=.\Obj\spi_lpc17xx.d --cpu=Cortex-M3 --apcs=interwork -O3 -IC:\Keil\ARM\INC -IC:\Keil\ARM\INC\NXP\LPC17xx --omf_browse=.\Obj\spi_lpc17xx.crf SPI_LPC17xx.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  spi_init PROC
;;;33     
;;;34     void spi_init (void) {
000000  4929              LDR      r1,|L1.168|
;;;35       /* Initialize and enable the SSP Interface module. */
;;;36     
;;;37       LPC_SC->PCONP       |= (1 << 21);           /* Enable power to SSPI0 block */
000002  f8510c6c          LDR      r0,[r1,#-0x6c]
;;;38     
;;;39       /* SSEL is GPIO, output set to high. */
;;;40       LPC_GPIO0->FIODIR   |=  (1<<16);            /* P0.16 is output             */
000006  4a29              LDR      r2,|L1.172|
000008  f4401000          ORR      r0,r0,#0x200000       ;37
00000c  f8410c6c          STR      r0,[r1,#-0x6c]        ;37
000010  6810              LDR      r0,[r2,#0]
000012  f4403080          ORR      r0,r0,#0x10000
000016  6010              STR      r0,[r2,#0]
;;;41       LPC_GPIO0->FIOPIN   |=  (1<<16);            /* set P0.16 high (SSEL inact.)*/
000018  6953              LDR      r3,[r2,#0x14]
;;;42       LPC_PINCON->PINSEL1 &= ~(3<<0);             /* P0.16 SSEL (used as GPIO)   */
00001a  4825              LDR      r0,|L1.176|
00001c  f4433380          ORR      r3,r3,#0x10000        ;41
000020  6153              STR      r3,[r2,#0x14]         ;41
000022  6842              LDR      r2,[r0,#4]
000024  f0220203          BIC      r2,r2,#3
000028  6042              STR      r2,[r0,#4]
;;;43     
;;;44       /* SCK, MISO, MOSI are SSP pins. */
;;;45       LPC_PINCON->PINSEL0 &= ~(3UL<<30);          /* P0.15 cleared               */
00002a  6802              LDR      r2,[r0,#0]
00002c  f0224240          BIC      r2,r2,#0xc0000000
000030  6002              STR      r2,[r0,#0]
;;;46       LPC_PINCON->PINSEL0 |=  (2UL<<30);          /* P0.15 SCK0                  */
000032  6802              LDR      r2,[r0,#0]
000034  f0424200          ORR      r2,r2,#0x80000000
000038  6002              STR      r2,[r0,#0]
;;;47       LPC_PINCON->PINSEL1 &= ~((3<<2) | (3<<4));  /* P0.17, P0.18 cleared        */
00003a  6842              LDR      r2,[r0,#4]
00003c  f022023c          BIC      r2,r2,#0x3c
000040  6042              STR      r2,[r0,#4]
;;;48       LPC_PINCON->PINSEL1 |=  ((2<<2) | (2<<4));  /* P0.17 MISO0, P0.18 MOSI0    */
000042  6842              LDR      r2,[r0,#4]
000044  f0420228          ORR      r2,r2,#0x28
000048  6042              STR      r2,[r0,#4]
;;;49     
;;;50       LPC_SC->PCLKSEL1    &= ~(3<<10);            /* PCLKSP0 = CCLK/4 ( 25MHz)   */
00004a  6fc8              LDR      r0,[r1,#0x7c]
00004c  f4206040          BIC      r0,r0,#0xc00
000050  67c8              STR      r0,[r1,#0x7c]
;;;51       LPC_SC->PCLKSEL1    |=  (1<<10);            /* PCLKSP0 = CCLK   (100MHz)   */
000052  6fc8              LDR      r0,[r1,#0x7c]
;;;52     
;;;53       LPC_SSP0->CPSR       = 250;                 /* 100MHz / 250 = 400kBit      */
000054  f04f02fa          MOV      r2,#0xfa
000058  f4406080          ORR      r0,r0,#0x400          ;51
00005c  67c8              STR      r0,[r1,#0x7c]         ;51
00005e  4815              LDR      r0,|L1.180|
000060  6102              STR      r2,[r0,#0x10]
;;;54                                                   /* maximum of 18MHz is possible*/    
;;;55       LPC_SSP0->CR0        = 0x0007;              /* 8Bit, CPOL=0, CPHA=0        */
000062  f04f0107          MOV      r1,#7
000066  6001              STR      r1,[r0,#0]
;;;56       LPC_SSP0->CR1        = 0x0002;              /* SSP0 enable, master         */
000068  f04f0102          MOV      r1,#2
00006c  6041              STR      r1,[r0,#4]
;;;57     }
00006e  4770              BX       lr
;;;58     
                          ENDP

                  spi_hi_speed PROC
;;;61     
;;;62     void spi_hi_speed (BOOL on) {
000070  4910              LDR      r1,|L1.180|
;;;63       /* Set a SPI clock to low/high speed for SD/MMC. */
;;;64     
;;;65       if (on == __TRUE) {
000072  2801              CMP      r0,#1
000074  d002              BEQ      |L1.124|
;;;66         /* Max. 12 MBit used for Data Transfer. */
;;;67         LPC_SSP0->CPSR = 10;                      /* 100MHz / 10 = 10MBit        */
;;;68       }
;;;69       else {
;;;70         /* Max. 400 kBit used in Card Initialization. */
;;;71         LPC_SSP0->CPSR = 250;                     /* 100MHz / 250 = 400kBit      */
000076  20fa              MOVS     r0,#0xfa
                  |L1.120|
000078  6108              STR      r0,[r1,#0x10]         ;67
;;;72       }
;;;73     }
00007a  4770              BX       lr
                  |L1.124|
00007c  200a              MOVS     r0,#0xa               ;67
00007e  e7fb              B        |L1.120|
;;;74     
                          ENDP

                  spi_ss PROC
;;;77     
;;;78     void spi_ss (U32 ss) {
000080  490a              LDR      r1,|L1.172|
;;;79       /* Enable/Disable SPI Chip Select (drive it high or low). */
;;;80     
;;;81       if (ss) {
000082  2800              CMP      r0,#0
;;;82         LPC_GPIO0->FIOPIN |= (1<<16);             /* SSEL is GPIO, set to high.  */
;;;83       }
;;;84       else {
;;;85         LPC_GPIO0->FIOPIN &= ~(1<<16);            /* SSEL is GPIO, set to high.  */
000084  6948              LDR      r0,[r1,#0x14]
000086  d002              BEQ      |L1.142|
000088  f4403080          ORR      r0,r0,#0x10000        ;82
00008c  e001              B        |L1.146|
                  |L1.142|
00008e  f4203080          BIC      r0,r0,#0x10000
                  |L1.146|
000092  6148              STR      r0,[r1,#0x14]         ;82
;;;86       }
;;;87     }
000094  4770              BX       lr
;;;88     
                          ENDP

                  spi_send PROC
;;;91     
;;;92     U8 spi_send (U8 outb) {
000096  4907              LDR      r1,|L1.180|
;;;93       /* Write and Read a byte on SPI interface. */
;;;94     
;;;95       LPC_SSP0->DR = outb;
000098  6088              STR      r0,[r1,#8]
                  |L1.154|
;;;96       while (LPC_SSP0->SR & BSY);                 /* Wait for transfer to finish */
00009a  68c8              LDR      r0,[r1,#0xc]
00009c  06c0              LSLS     r0,r0,#27
00009e  d4fc              BMI      |L1.154|
;;;97       return (LPC_SSP0->DR);                      /* Return received value       */
0000a0  6888              LDR      r0,[r1,#8]
0000a2  b2c0              UXTB     r0,r0
;;;98     }
0000a4  4770              BX       lr
;;;99     
                          ENDP

0000a6  0000              DCW      0x0000
                  |L1.168|
                          DCD      0x400fc130
                  |L1.172|
                          DCD      0x2009c000
                  |L1.176|
                          DCD      0x4002c000
                  |L1.180|
                          DCD      0x40088000
